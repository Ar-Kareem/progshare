user  nginx;
worker_processes 2;

# for prod
error_log  /var/log/nginx/error.log warn;
# for debugging
# error_log  /var/log/nginx/error.log notice;

pid        /var/run/nginx.pid;
events {
    worker_connections 2048;
}
http {
    limit_req_zone $binary_remote_addr zone=my_zone_1:1m rate=6r/m;
    limit_req_zone $binary_remote_addr zone=my_zone_fast:1m rate=1r/s;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  300;

    server {
        listen 8000;
        location /save_prog {
            limit_req zone=my_zone_1 burst=1;
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            try_files $uri @app;
        }
        location /get_prog {
            limit_req zone=my_zone_fast burst=1;
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            try_files $uri @app;
        }
        location /countcheck324 {
            limit_req zone=my_zone_fast burst=1;
            try_files $uri @app;
        }
        location /lastbackup324 {
            limit_req zone=my_zone_fast burst=1;
            try_files $uri @app;
        }
        location /isup {
            limit_req zone=my_zone_fast burst=1;
            try_files $uri @app;
        }
        location / {
            limit_req zone=my_zone_fast burst=1;
            return 404;
        }
        location @app {
            include uwsgi_params;
            uwsgi_pass unix:///tmp/uwsgi.sock;
        }
    }
}
daemon off;